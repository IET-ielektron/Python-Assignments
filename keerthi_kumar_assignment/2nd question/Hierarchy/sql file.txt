--sql for creating employee_master
CREATE TABLE demo.employee_master (
	emp_id bigserial NOT NULL,
	emp_name varchar(50) not NULL
	CONSTRAINT employee_master_pk PRIMARY KEY (emp_id)
	);

--drop table demo.employee_master;
-------------------------

--sql for creating manager_master
CREATE TABLE demo.manager_master (
	manager_id bigserial not NULL,
	manager_name varchar(50) not NULL,
	CONSTRAINT manager_master_pk PRIMARY KEY (manager_id)
	);
	
--drop table demo.manager_master;
-----------------------

--sql for creating emp_mgr_rel_master
--relation between employee and manager
CREATE TABLE demo.emp_mgr_rel_master (
	emp_id int4 null,
	manager_id int4 null
	);

--drop table demo.emp_mgr_rel_master;

-------------

--function to fetch the list of employee 
CREATE OR REPLACE FUNCTION demo.get_all_employees()
 RETURNS TABLE(emp_id bigint, emp_name character varying, manager_id bigint, manager_name character varying)
 LANGUAGE plpgsql
AS $function$
BEGIN
   RETURN QUERY
   select
      em.emp_id,
      em.emp_name,
      mm.manager_id,
      mm.manager_name
   from demo.employee_master em
   inner join demo.emp_mgr_rel_master emrm on em.emp_id = emrm.emp_id
   inner join demo.manager_master mm on emrm.manager_id = mm.manager_id;
END; $function$
;

--select * from demo.get_all_employees()
--drop function demo.get_all_employees()
